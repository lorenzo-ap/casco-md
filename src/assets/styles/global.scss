@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');

:root {
  --main-color: #4fbdba;
}

* {
  font-family: 'Montserrat', sans-serif;
}

::-webkit-scrollbar {
  width: 9px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.2);
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.2);
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.4);
}

::-webkit-scrollbar-thumb:active {
  background: rgba(0, 0, 0, 0.6);
}

.container {
  max-width: 1140px;
  margin: 0 auto;
}

.button {
  border: 0;
  border-radius: 6px;
  outline: 0;
  padding: 15px 40px;
  background-color: var(--main-color);
  cursor: pointer;
  transition: opacity .4s ease;

  &-sm {
    padding: 15px 20px;
  }

  &:hover {
    opacity: .8;
  }
}

.title {
  margin-bottom: 40px;
  font-size: 40px;
  text-align: center;
}

.footer {
  &-link {
    &:hover {
      color: var(--main-color);
    }
  }
}

.input {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23131313%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: right 1rem top 50%;
  background-size: 0.65rem auto;
  cursor: pointer;
}

// Checkboxes
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkbox-wrapper input[type=checkbox] {
    // --active: #275EFE;
    --active: var(--main-color);
    --active-inner: #fff;
    --focus: 2px rgba(79, 189, 186, .3);
    --border: #BBC1E1;
    --border-hover: var(--main-color);
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }

  .checkbox-wrapper input[type=checkbox]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
  }

  .checkbox-wrapper input[type=checkbox]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }

  .checkbox-wrapper input[type=checkbox]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }

  .checkbox-wrapper input[type=checkbox]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }

  .checkbox-wrapper input[type=checkbox]:disabled+label {
    cursor: not-allowed;
  }

  .checkbox-wrapper input[type=checkbox]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }

  .checkbox-wrapper input[type=checkbox]:focus {
    box-shadow: 0 0 0 var(--focus);
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch) {
    width: 21px;
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch):after {
    opacity: var(--o, 0);
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch):checked {
    --o: 1;
  }

  .checkbox-wrapper input[type=checkbox]+label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch) {
    border-radius: 7px;
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }

  .checkbox-wrapper input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
  }
}

.checkbox-wrapper * {
  box-sizing: inherit;
}

.checkbox-wrapper *:before,
.checkbox-wrapper *:after {
  box-sizing: inherit;
}